<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SDS 348 Portfolio Website</title>
    <link>/</link>
    <description>Recent content on SDS 348 Portfolio Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 02 Oct 2016 22:55:05 -0400</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fancy Initials</title>
      <link>/blog/fancy-initials/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/fancy-initials/</guid>
      <description>Here are some fancy initials
 print(&amp;quot; EEEEEEEEEEEE HH HH OOOOOOOOOOOO \n EEEEEEEEEEEE HH HH OOOOOOOOOOOO \n EE HH HH OO OO \n EE HH HH OO OO \n EEEEEEEEEEEE HHHHHHHHHHHH OO OO \n EEEEEEEEEEEE HHHHHHHHHHHH OO OO \n EE HH HH OO OO \n EE HH HH OO OO \n EEEEEEEEEEEE .. HH HH .. OOOOOOOOOOOO .. \n EEEEEEEEEEEE .. HH HH .. OOOOOOOOOOOO .. \n&amp;quot;) ## EEEEEEEEEEEE HH HH OOOOOOOOOOOO ## EEEEEEEEEEEE HH HH OOOOOOOOOOOO ## EE HH HH OO OO ## EE HH HH OO OO ## EEEEEEEEEEEE HHHHHHHHHHHH OO OO ## EEEEEEEEEEEE HHHHHHHHHHHH OO OO ## EE HH HH OO OO ## EE HH HH OO OO ## EEEEEEEEEEEE .</description>
    </item>
    
    <item>
      <title>I love Python</title>
      <link>/blog/i-love-python/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/i-love-python/</guid>
      <description>I started off learning Java in high school. Though I loved coding and I found that much of it made sense, I hated how tedious it was. The number of times I got errors for a missing a curly bracket still really makes me frustrated. Python is a lot simpler and gets rid of all those errors. Also, with the right program for coding it will even make your job easier by giving suggestions for variable and class names you have already defined (much like R).</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/projects/</link>
      <pubDate>Sun, 02 Oct 2016 22:55:05 -0400</pubDate>
      
      <guid>/projects/</guid>
      <description>Projects -Link to Project 1: Exploratory Data Analysis of the Spread of Coronavirus in Korea
-Link to Project 2: Modeling, Testing, and Predicting Abortion&amp;rsquo;s Effects on Parity</description>
    </item>
    
    <item>
      <title>Project 1: Exploratory Data Analysis</title>
      <link>/project1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/project1/</guid>
      <description>Introduction # Data sets library(dplyr) library(ggplot2) library(tidyr) library(tibble) install.packages(&amp;quot;cluster&amp;quot;) library(cluster) library(tidyverse) install.packages(&amp;quot;fivethirtyeight&amp;quot;) library(fivethirtyeight) data() # setup working directory and read files setwd(&amp;quot;~/Elizabeth Oh/Homework/&amp;quot;) time &amp;lt;- read.csv(file = &amp;quot;time.csv&amp;quot;) trend &amp;lt;- read.csv(file = &amp;quot;trend.csv&amp;quot;) glimpse(time) ## Observations: 53 ## Variables: 24 ## $ date &amp;lt;fct&amp;gt; 2020-01-20, 2020-01-21, 2020-01-22, 2020-01-23, 202… ## $ time &amp;lt;int&amp;gt; 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,… ## $ test &amp;lt;int&amp;gt; 1, 1, 4, 22, 27, 27, 51, 61, 116, 187, 246, 312, 37… ## $ negative &amp;lt;int&amp;gt; 0, 0, 3, 21, 25, 25, 47, 56, 97, 155, 199, 245, 289… ## $ confirmed &amp;lt;int&amp;gt; 1, 1, 1, 1, 2, 2, 3, 4, 4, 4, 6, 11, 12, 15, 15, 16… ## $ released &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, … ## $ deceased &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … ## $ Seoul &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 3, 4, 4, 5, 5, 5, 5, … ## $ Busan &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … ## $ Daegu &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … ## $ Incheon &amp;lt;int&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … ## $ Gwangju &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, … ## $ Daejeon &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … ## $ Ulsan &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … ## $ Sejong &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … ## $ Gyeonggi.</description>
    </item>
    
    <item>
      <title>Project 2: Modeling, Testing, and Predicting</title>
      <link>/project2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/project2/</guid>
      <description>Modeling 0. Introduction install.packages(&amp;quot;fivethirtyeight&amp;quot;) library(fivethirtyeight) data() `?`(fivethirtyeight::infert) ## No documentation for &amp;#39;infert&amp;#39; in specified packages and libraries: ## you could try &amp;#39;??infert&amp;#39; head(infert) ## education age parity induced case spontaneous stratum pooled.stratum ## 1 0-5yrs 26 6 1 1 2 1 3 ## 2 0-5yrs 42 1 1 1 0 2 1 ## 3 0-5yrs 39 6 2 1 0 3 4 ## 4 0-5yrs 34 4 2 1 0 4 2 ## 5 6-11yrs 35 3 1 1 1 5 32 ## 6 6-11yrs 36 4 2 1 1 6 36 abortData &amp;lt;- select(infert, -pooled.</description>
    </item>
    
  </channel>
</rss>